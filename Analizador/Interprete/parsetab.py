
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGUAL_QUEDIFERENTE_QUEleftMAYOR_QUEMENOR_QUEMAYOR_IGUAL_QUEMENOR_IGUAL_QUEleftMASMENOSleftPORDIVISIONMODULOleftPOTENCIArightUMENOSAND BOOL BREAK CADENA COMA COMILLAS CONTINUE CORCHETE_DER CORCHETE_IZQ DECIMAL DEF DIFERENTE_QUE DIVISION DOSPUNTOS ELSE ELSEIF END ENTERO FALSE FLOAT FOR ID IF IGUAL IGUAL_QUE IN INT LEN LINEANUEVA LLAVE_DER LLAVE_IZQ LOWER MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULO NONE NOT OR PARENTESIS_DER PARENTESIS_IZQ POR POTENCIA PRINT PRINTLN PUNTO RETURN STRING TRUE UPPER WHILEinit            : instruccionesinstrucciones    : instrucciones instruccion\n                            | instruccioninstruccion      : print_instr LINEANUEVA\n                            | println_instr LINEANUEVA\n                            | asignacion_instr LINEANUEVA\n                            | asignacion_arreglo_instr LINEANUEVA\n                            | definicion_asignacion_instr LINEANUEVA\n                            | call_function LINEANUEVA\n                            | declare_function LINEANUEVA\n                            | return_state LINEANUEVA\n                            | break_state LINEANUEVA\n                            | continue_state LINEANUEVA\n                            | if_state LINEANUEVA\n                            | while_state LINEANUEVA\n                            | for_state LINEANUEVA\n                            | nativas LINEANUEVA\n                            | expression LINEANUEVAexpression       : MENOS expression %prec UMENOS\n                            | NOT expression %prec UMENOS\n                            | expression MAS expression\n                            | expression MENOS expression\n                            | expression POR expression\n                            | expression DIVISION expression\n                            | expression POTENCIA expression\n                            | expression MODULO expression\n                            | expression MAYOR_QUE expression\n                            | expression MENOR_QUE expression\n                            | expression MENOR_IGUAL_QUE expression\n                            | expression MAYOR_IGUAL_QUE expression\n                            | expression IGUAL_QUE expression\n                            | expression DIFERENTE_QUE expression\n                            | expression OR expression\n                            | expression AND expression\n                            | final_expressionfinal_expression     : PARENTESIS_IZQ expression PARENTESIS_DER\n                                | CORCHETE_IZQ exp_list CORCHETE_DER\n                                | DECIMAL\n                                | ENTERO\n                                | CADENA\n                                | ID\n                                | ID index_list  \n                                | TRUE\n                                | FALSE\n                                | call_function\n                                | nativasnativas          : UPPER PARENTESIS_IZQ expression PARENTESIS_DER\n                            | LOWER PARENTESIS_IZQ expression PARENTESIS_DER\n                            | STRING PARENTESIS_IZQ expression PARENTESIS_DER\n                            | FLOAT PARENTESIS_IZQ expression PARENTESIS_DER\n                            | LEN PARENTESIS_IZQ expression PARENTESIS_DER\n                            print_instr    : PRINT PARENTESIS_IZQ expression PARENTESIS_DERprintln_instr  : PRINTLN PARENTESIS_IZQ expression PARENTESIS_DERtipo     : INT\n                    | FLOAT\n                    | BOOL\n                    | STRING\n                    | NONE\n        asignacion_instr     : ID IGUAL expressiondefinicion_asignacion_instr  : ID  DOSPUNTOS tipo IGUAL expressionasignacion_arreglo_instr     : ID index_list IGUAL expressioncall_function    : ID PARENTESIS_IZQ PARENTESIS_DER\n                            | ID PARENTESIS_IZQ exp_list PARENTESIS_DERexp_list         : exp_list COMA expression\n                            | expressionindex_list       : index_list CORCHETE_IZQ expression CORCHETE_DER\n                            | CORCHETE_IZQ expression CORCHETE_DERstatement        : instruccionesdeclare_function     : DEF ID PARENTESIS_IZQ dec_params PARENTESIS_DER DOSPUNTOS statement END\n                                | DEF ID PARENTESIS_IZQ PARENTESIS_DER DOSPUNTOS statement ENDdec_params :   dec_params COMA ID DOSPUNTOS tipo\n                        | dec_params COMA ID\n                        | ID DOSPUNTOS tipo\n                        | IDif_state     : IF expression DOSPUNTOS statement END\n                        | IF expression DOSPUNTOS statement ELSE DOSPUNTOS statement END\n                        | IF expression DOSPUNTOS statement else_if_list ENDelse_if_list     : ELSEIF expression DOSPUNTOS statement\n                            | ELSEIF expression DOSPUNTOS statement ELSE statement\n                            | ELSEIF expression DOSPUNTOS statement else_if_listwhile_state      : WHILE expression DOSPUNTOS statement ENDfor_state        : FOR ID IN expression DOSPUNTOS expression DOSPUNTOS statement END\n                            | FOR ID IN expression DOSPUNTOS statement ENDbreak_state      : BREAKcontinue_state      : CONTINUEreturn_state     : RETURN\n                            | RETURN expression'
    
_lr_action_items = {'PRINT':([0,2,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,130,131,151,165,171,173,176,188,190,197,],[19,19,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,19,19,19,19,19,19,19,19,19,19,]),'PRINTLN':([0,2,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,130,131,151,165,171,173,176,188,190,197,],[21,21,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,21,21,21,21,21,21,21,21,21,21,]),'ID':([0,2,3,20,23,24,27,28,29,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,129,130,131,132,139,144,151,164,165,169,171,173,176,188,190,197,],[22,22,-3,76,85,76,76,76,89,76,76,76,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,147,22,22,76,76,76,22,174,22,76,179,22,22,22,22,22,]),'DEF':([0,2,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,130,131,151,165,171,173,176,188,190,197,],[23,23,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,23,23,23,23,23,23,23,23,23,23,]),'RETURN':([0,2,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,130,131,151,165,171,173,176,188,190,197,],[24,24,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,24,24,24,24,24,24,24,24,24,24,]),'BREAK':([0,2,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,130,131,151,165,171,173,176,188,190,197,],[25,25,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,25,25,25,25,25,25,25,25,25,25,]),'CONTINUE':([0,2,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,130,131,151,165,171,173,176,188,190,197,],[26,26,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,26,26,26,26,26,26,26,26,26,26,]),'IF':([0,2,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,130,131,151,165,171,173,176,188,190,197,],[27,27,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,27,27,27,27,27,27,27,27,27,27,]),'WHILE':([0,2,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,130,131,151,165,171,173,176,188,190,197,],[28,28,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,28,28,28,28,28,28,28,28,28,28,]),'FOR':([0,2,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,130,131,151,165,171,173,176,188,190,197,],[29,29,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,29,29,29,29,29,29,29,29,29,29,]),'UPPER':([0,2,3,20,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[30,30,-3,30,30,30,30,30,30,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'LOWER':([0,2,3,20,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[31,31,-3,31,31,31,31,31,31,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'STRING':([0,2,3,20,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,82,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,162,165,169,171,173,176,185,188,190,197,],[32,32,-3,32,32,32,32,32,32,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,124,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,124,32,32,32,32,32,124,32,32,32,]),'FLOAT':([0,2,3,20,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,82,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,162,165,169,171,173,176,185,188,190,197,],[33,33,-3,33,33,33,33,33,33,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,122,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,122,33,33,33,33,33,122,33,33,33,]),'LEN':([0,2,3,20,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[34,34,-3,34,34,34,34,34,34,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'MENOS':([0,2,3,9,17,18,20,22,24,27,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,87,88,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,126,128,130,131,132,133,134,135,136,137,138,139,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,165,169,171,173,176,178,179,180,182,183,188,189,190,197,],[35,35,-3,-45,-46,61,35,-41,35,35,35,35,35,-35,35,-38,-39,-40,-43,-44,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,61,-41,-45,-46,35,35,-42,35,35,61,61,61,35,35,35,35,35,-19,-20,61,-21,-22,-23,-24,-25,-26,61,61,61,61,61,61,61,61,61,-36,-42,61,61,35,35,-62,61,35,35,35,61,61,61,61,61,-37,35,61,61,35,-63,-67,35,61,-47,-48,-49,-50,-51,61,-66,61,35,35,35,35,35,61,-41,61,-45,-46,35,-42,35,35,]),'NOT':([0,2,3,20,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[36,36,-3,36,36,36,36,36,36,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'PARENTESIS_IZQ':([0,2,3,19,20,21,22,24,27,28,30,31,32,33,34,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,83,84,85,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,179,188,190,197,],[20,20,-3,74,20,79,83,20,20,20,90,91,92,93,94,20,20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,83,20,20,20,20,129,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,83,20,20,20,]),'CORCHETE_IZQ':([0,2,3,20,22,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,81,83,84,90,91,92,93,94,115,118,119,130,131,132,139,144,146,151,160,165,169,171,173,176,179,188,189,190,197,],[38,38,-3,38,84,38,38,38,38,38,38,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,84,38,38,119,38,38,38,38,38,38,38,119,38,38,38,38,38,38,38,-67,38,-66,38,38,38,38,38,84,38,119,38,38,]),'DECIMAL':([0,2,3,20,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[39,39,-3,39,39,39,39,39,39,39,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'ENTERO':([0,2,3,20,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[40,40,-3,40,40,40,40,40,40,40,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'CADENA':([0,2,3,20,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[41,41,-3,41,41,41,41,41,41,41,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'TRUE':([0,2,3,20,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[42,42,-3,42,42,42,42,42,42,42,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'FALSE':([0,2,3,20,24,27,28,35,36,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[43,43,-3,43,43,43,43,43,43,43,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'$end':([1,2,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[0,-1,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,]),'END':([3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,150,151,152,168,175,181,184,187,195,196,198,200,],[-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,166,-68,170,177,186,191,192,194,-78,199,-80,-79,]),'ELSE':([3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,150,151,195,],[-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,167,-68,197,]),'ELSEIF':([3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,150,151,195,],[-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,169,-68,169,]),'LINEANUEVA':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,25,26,37,39,40,41,42,43,76,77,78,81,86,95,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,117,126,138,140,141,142,145,146,154,155,156,157,158,160,161,166,170,177,179,180,182,183,186,189,191,192,194,199,],[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,-41,-86,-84,-85,-35,-38,-39,-40,-43,-44,-41,-45,-46,-42,-87,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,-42,-59,-62,-37,-52,-53,-61,-63,-67,-47,-48,-49,-50,-51,-66,-60,-75,-81,-77,-41,59,50,58,-70,-42,-83,-69,-76,-82,]),'MAS':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,60,-41,-35,-38,-39,-40,-43,-44,60,-41,-45,-46,-42,60,60,60,-19,-20,60,-21,-22,-23,-24,-25,-26,60,60,60,60,60,60,60,60,60,-36,-42,60,60,-62,60,60,60,60,60,60,-37,60,60,-63,-67,60,-47,-48,-49,-50,-51,60,-66,60,60,-41,60,-45,-46,-42,]),'POR':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,62,-41,-35,-38,-39,-40,-43,-44,62,-41,-45,-46,-42,62,62,62,-19,-20,62,62,62,-23,-24,-25,-26,62,62,62,62,62,62,62,62,62,-36,-42,62,62,-62,62,62,62,62,62,62,-37,62,62,-63,-67,62,-47,-48,-49,-50,-51,62,-66,62,62,-41,62,-45,-46,-42,]),'DIVISION':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,63,-41,-35,-38,-39,-40,-43,-44,63,-41,-45,-46,-42,63,63,63,-19,-20,63,63,63,-23,-24,-25,-26,63,63,63,63,63,63,63,63,63,-36,-42,63,63,-62,63,63,63,63,63,63,-37,63,63,-63,-67,63,-47,-48,-49,-50,-51,63,-66,63,63,-41,63,-45,-46,-42,]),'POTENCIA':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,64,-41,-35,-38,-39,-40,-43,-44,64,-41,-45,-46,-42,64,64,64,-19,-20,64,64,64,64,64,-25,64,64,64,64,64,64,64,64,64,64,-36,-42,64,64,-62,64,64,64,64,64,64,-37,64,64,-63,-67,64,-47,-48,-49,-50,-51,64,-66,64,64,-41,64,-45,-46,-42,]),'MODULO':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,65,-41,-35,-38,-39,-40,-43,-44,65,-41,-45,-46,-42,65,65,65,-19,-20,65,65,65,-23,-24,-25,-26,65,65,65,65,65,65,65,65,65,-36,-42,65,65,-62,65,65,65,65,65,65,-37,65,65,-63,-67,65,-47,-48,-49,-50,-51,65,-66,65,65,-41,65,-45,-46,-42,]),'MAYOR_QUE':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,66,-41,-35,-38,-39,-40,-43,-44,66,-41,-45,-46,-42,66,66,66,-19,-20,66,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,66,66,66,66,66,-36,-42,66,66,-62,66,66,66,66,66,66,-37,66,66,-63,-67,66,-47,-48,-49,-50,-51,66,-66,66,66,-41,66,-45,-46,-42,]),'MENOR_QUE':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,67,-41,-35,-38,-39,-40,-43,-44,67,-41,-45,-46,-42,67,67,67,-19,-20,67,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,67,67,67,67,67,-36,-42,67,67,-62,67,67,67,67,67,67,-37,67,67,-63,-67,67,-47,-48,-49,-50,-51,67,-66,67,67,-41,67,-45,-46,-42,]),'MENOR_IGUAL_QUE':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,68,-41,-35,-38,-39,-40,-43,-44,68,-41,-45,-46,-42,68,68,68,-19,-20,68,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,68,68,68,68,68,-36,-42,68,68,-62,68,68,68,68,68,68,-37,68,68,-63,-67,68,-47,-48,-49,-50,-51,68,-66,68,68,-41,68,-45,-46,-42,]),'MAYOR_IGUAL_QUE':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,69,-41,-35,-38,-39,-40,-43,-44,69,-41,-45,-46,-42,69,69,69,-19,-20,69,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,69,69,69,69,69,-36,-42,69,69,-62,69,69,69,69,69,69,-37,69,69,-63,-67,69,-47,-48,-49,-50,-51,69,-66,69,69,-41,69,-45,-46,-42,]),'IGUAL_QUE':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,70,-41,-35,-38,-39,-40,-43,-44,70,-41,-45,-46,-42,70,70,70,-19,-20,70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,70,70,70,-36,-42,70,70,-62,70,70,70,70,70,70,-37,70,70,-63,-67,70,-47,-48,-49,-50,-51,70,-66,70,70,-41,70,-45,-46,-42,]),'DIFERENTE_QUE':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,71,-41,-35,-38,-39,-40,-43,-44,71,-41,-45,-46,-42,71,71,71,-19,-20,71,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,71,71,71,-36,-42,71,71,-62,71,71,71,71,71,71,-37,71,71,-63,-67,71,-47,-48,-49,-50,-51,71,-66,71,71,-41,71,-45,-46,-42,]),'OR':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,72,-41,-35,-38,-39,-40,-43,-44,72,-41,-45,-46,-42,72,72,72,-19,-20,72,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,72,-36,-42,72,72,-62,72,72,72,72,72,72,-37,72,72,-63,-67,72,-47,-48,-49,-50,-51,72,-66,72,72,-41,72,-45,-46,-42,]),'AND':([9,17,18,22,37,39,40,41,42,43,75,76,77,78,81,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,126,128,133,134,135,136,137,138,142,143,145,146,153,154,155,156,157,158,159,160,161,178,179,180,182,183,189,],[-45,-46,73,-41,-35,-38,-39,-40,-43,-44,73,-41,-45,-46,-42,73,73,73,-19,-20,73,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,73,-34,73,-36,-42,73,73,-62,73,73,73,73,73,73,-37,73,73,-63,-67,73,-47,-48,-49,-50,-51,73,-66,73,73,-41,73,-45,-46,-42,]),'IGUAL':([22,81,120,121,122,123,124,125,146,160,179,189,],[80,118,144,-54,-55,-56,-57,-58,-67,-66,80,118,]),'DOSPUNTOS':([22,37,39,40,41,42,43,76,77,78,87,88,95,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,126,138,145,146,147,149,153,154,155,156,157,158,160,163,167,174,178,179,180,182,183,189,],[82,-35,-38,-39,-40,-43,-44,-41,-45,-46,130,131,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,-42,-62,-37,-63,-67,162,165,171,-47,-48,-49,-50,-51,-66,173,176,185,188,82,190,-45,-46,-42,]),'PARENTESIS_DER':([37,39,40,41,42,43,75,76,77,78,83,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,122,123,124,125,126,127,129,133,134,135,136,137,138,145,146,147,148,154,155,156,157,158,159,160,172,174,193,],[-35,-38,-39,-40,-43,-44,114,-41,-45,-46,126,-19,-20,-65,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,140,-36,-42,141,-54,-55,-56,-57,-58,-62,145,149,154,155,156,157,158,-37,-63,-67,-74,163,-47,-48,-49,-50,-51,-64,-66,-73,-72,-71,]),'CORCHETE_DER':([37,39,40,41,42,43,76,77,78,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,126,128,138,143,145,146,154,155,156,157,158,159,160,],[-35,-38,-39,-40,-43,-44,-41,-45,-46,-19,-20,138,-65,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,-42,-62,146,-37,160,-63,-67,-47,-48,-49,-50,-51,-64,-66,]),'COMA':([37,39,40,41,42,43,76,77,78,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,121,122,123,124,125,126,127,138,145,146,147,148,154,155,156,157,158,159,160,172,174,193,],[-35,-38,-39,-40,-43,-44,-41,-45,-46,-19,-20,139,-65,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-36,-42,-54,-55,-56,-57,-58,-62,139,-37,-63,-67,-74,164,-47,-48,-49,-50,-51,-64,-66,-73,-72,-71,]),'INT':([82,162,185,],[121,121,121,]),'BOOL':([82,162,185,],[123,123,123,]),'NONE':([82,162,185,],[125,125,125,]),'IN':([89,],[132,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,130,131,165,171,173,176,188,190,197,],[2,151,151,151,151,151,151,151,151,151,]),'instruccion':([0,2,130,131,151,165,171,173,176,188,190,197,],[3,44,3,3,44,3,3,3,3,3,3,3,]),'print_instr':([0,2,130,131,151,165,171,173,176,188,190,197,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'println_instr':([0,2,130,131,151,165,171,173,176,188,190,197,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion_instr':([0,2,130,131,151,165,171,173,176,188,190,197,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'asignacion_arreglo_instr':([0,2,130,131,151,165,171,173,176,188,190,197,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'definicion_asignacion_instr':([0,2,130,131,151,165,171,173,176,188,190,197,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'call_function':([0,2,20,24,27,28,35,36,38,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[9,9,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,9,9,77,77,77,9,9,77,182,9,9,9,9,9,]),'declare_function':([0,2,130,131,151,165,171,173,176,188,190,197,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'return_state':([0,2,130,131,151,165,171,173,176,188,190,197,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'break_state':([0,2,130,131,151,165,171,173,176,188,190,197,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'continue_state':([0,2,130,131,151,165,171,173,176,188,190,197,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'if_state':([0,2,130,131,151,165,171,173,176,188,190,197,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'while_state':([0,2,130,131,151,165,171,173,176,188,190,197,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'for_state':([0,2,130,131,151,165,171,173,176,188,190,197,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'nativas':([0,2,20,24,27,28,35,36,38,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[17,17,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,17,17,78,78,78,17,17,78,183,17,17,17,17,17,]),'expression':([0,2,20,24,27,28,35,36,38,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[18,18,75,86,87,88,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,117,98,128,133,134,135,136,137,142,143,18,18,153,159,161,18,18,178,180,18,18,18,18,18,]),'final_expression':([0,2,20,24,27,28,35,36,38,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,83,84,90,91,92,93,94,118,119,130,131,132,139,144,151,165,169,171,173,176,188,190,197,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'index_list':([22,76,179,],[81,115,189,]),'exp_list':([38,83,],[97,127,]),'tipo':([82,162,185,],[120,172,193,]),'dec_params':([129,],[148,]),'statement':([130,131,165,171,173,176,188,190,197,],[150,152,175,181,184,187,195,196,200,]),'else_if_list':([150,195,],[168,198,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','analizador_lexico_sintactico.py',195),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','analizador_lexico_sintactico.py',199),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista','analizador_lexico_sintactico.py',200),
  ('instruccion -> print_instr LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',208),
  ('instruccion -> println_instr LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',209),
  ('instruccion -> asignacion_instr LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',210),
  ('instruccion -> asignacion_arreglo_instr LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',211),
  ('instruccion -> definicion_asignacion_instr LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',212),
  ('instruccion -> call_function LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',213),
  ('instruccion -> declare_function LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',214),
  ('instruccion -> return_state LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',215),
  ('instruccion -> break_state LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',216),
  ('instruccion -> continue_state LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',217),
  ('instruccion -> if_state LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',218),
  ('instruccion -> while_state LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',219),
  ('instruccion -> for_state LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',220),
  ('instruccion -> nativas LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',221),
  ('instruccion -> expression LINEANUEVA','instruccion',2,'p_instruccion','analizador_lexico_sintactico.py',222),
  ('expression -> MENOS expression','expression',2,'p_expression','analizador_lexico_sintactico.py',226),
  ('expression -> NOT expression','expression',2,'p_expression','analizador_lexico_sintactico.py',227),
  ('expression -> expression MAS expression','expression',3,'p_expression','analizador_lexico_sintactico.py',228),
  ('expression -> expression MENOS expression','expression',3,'p_expression','analizador_lexico_sintactico.py',229),
  ('expression -> expression POR expression','expression',3,'p_expression','analizador_lexico_sintactico.py',230),
  ('expression -> expression DIVISION expression','expression',3,'p_expression','analizador_lexico_sintactico.py',231),
  ('expression -> expression POTENCIA expression','expression',3,'p_expression','analizador_lexico_sintactico.py',232),
  ('expression -> expression MODULO expression','expression',3,'p_expression','analizador_lexico_sintactico.py',233),
  ('expression -> expression MAYOR_QUE expression','expression',3,'p_expression','analizador_lexico_sintactico.py',234),
  ('expression -> expression MENOR_QUE expression','expression',3,'p_expression','analizador_lexico_sintactico.py',235),
  ('expression -> expression MENOR_IGUAL_QUE expression','expression',3,'p_expression','analizador_lexico_sintactico.py',236),
  ('expression -> expression MAYOR_IGUAL_QUE expression','expression',3,'p_expression','analizador_lexico_sintactico.py',237),
  ('expression -> expression IGUAL_QUE expression','expression',3,'p_expression','analizador_lexico_sintactico.py',238),
  ('expression -> expression DIFERENTE_QUE expression','expression',3,'p_expression','analizador_lexico_sintactico.py',239),
  ('expression -> expression OR expression','expression',3,'p_expression','analizador_lexico_sintactico.py',240),
  ('expression -> expression AND expression','expression',3,'p_expression','analizador_lexico_sintactico.py',241),
  ('expression -> final_expression','expression',1,'p_expression','analizador_lexico_sintactico.py',242),
  ('final_expression -> PARENTESIS_IZQ expression PARENTESIS_DER','final_expression',3,'p_final_expression','analizador_lexico_sintactico.py',298),
  ('final_expression -> CORCHETE_IZQ exp_list CORCHETE_DER','final_expression',3,'p_final_expression','analizador_lexico_sintactico.py',299),
  ('final_expression -> DECIMAL','final_expression',1,'p_final_expression','analizador_lexico_sintactico.py',300),
  ('final_expression -> ENTERO','final_expression',1,'p_final_expression','analizador_lexico_sintactico.py',301),
  ('final_expression -> CADENA','final_expression',1,'p_final_expression','analizador_lexico_sintactico.py',302),
  ('final_expression -> ID','final_expression',1,'p_final_expression','analizador_lexico_sintactico.py',303),
  ('final_expression -> ID index_list','final_expression',2,'p_final_expression','analizador_lexico_sintactico.py',304),
  ('final_expression -> TRUE','final_expression',1,'p_final_expression','analizador_lexico_sintactico.py',305),
  ('final_expression -> FALSE','final_expression',1,'p_final_expression','analizador_lexico_sintactico.py',306),
  ('final_expression -> call_function','final_expression',1,'p_final_expression','analizador_lexico_sintactico.py',307),
  ('final_expression -> nativas','final_expression',1,'p_final_expression','analizador_lexico_sintactico.py',308),
  ('nativas -> UPPER PARENTESIS_IZQ expression PARENTESIS_DER','nativas',4,'p_nativas','analizador_lexico_sintactico.py',348),
  ('nativas -> LOWER PARENTESIS_IZQ expression PARENTESIS_DER','nativas',4,'p_nativas','analizador_lexico_sintactico.py',349),
  ('nativas -> STRING PARENTESIS_IZQ expression PARENTESIS_DER','nativas',4,'p_nativas','analizador_lexico_sintactico.py',350),
  ('nativas -> FLOAT PARENTESIS_IZQ expression PARENTESIS_DER','nativas',4,'p_nativas','analizador_lexico_sintactico.py',351),
  ('nativas -> LEN PARENTESIS_IZQ expression PARENTESIS_DER','nativas',4,'p_nativas','analizador_lexico_sintactico.py',352),
  ('print_instr -> PRINT PARENTESIS_IZQ expression PARENTESIS_DER','print_instr',4,'p_print_instr','analizador_lexico_sintactico.py',362),
  ('println_instr -> PRINTLN PARENTESIS_IZQ expression PARENTESIS_DER','println_instr',4,'p_println_instr','analizador_lexico_sintactico.py',367),
  ('tipo -> INT','tipo',1,'p_tipo','analizador_lexico_sintactico.py',372),
  ('tipo -> FLOAT','tipo',1,'p_tipo','analizador_lexico_sintactico.py',373),
  ('tipo -> BOOL','tipo',1,'p_tipo','analizador_lexico_sintactico.py',374),
  ('tipo -> STRING','tipo',1,'p_tipo','analizador_lexico_sintactico.py',375),
  ('tipo -> NONE','tipo',1,'p_tipo','analizador_lexico_sintactico.py',376),
  ('asignacion_instr -> ID IGUAL expression','asignacion_instr',3,'p_asignacion_instr','analizador_lexico_sintactico.py',392),
  ('definicion_asignacion_instr -> ID DOSPUNTOS tipo IGUAL expression','definicion_asignacion_instr',5,'p_definicion_asignacion_instr','analizador_lexico_sintactico.py',397),
  ('asignacion_arreglo_instr -> ID index_list IGUAL expression','asignacion_arreglo_instr',4,'p_asignacion_arreglo_instr','analizador_lexico_sintactico.py',401),
  ('call_function -> ID PARENTESIS_IZQ PARENTESIS_DER','call_function',3,'p_call_function_instr','analizador_lexico_sintactico.py',404),
  ('call_function -> ID PARENTESIS_IZQ exp_list PARENTESIS_DER','call_function',4,'p_call_function_instr','analizador_lexico_sintactico.py',405),
  ('exp_list -> exp_list COMA expression','exp_list',3,'p_exp_list_instr','analizador_lexico_sintactico.py',412),
  ('exp_list -> expression','exp_list',1,'p_exp_list_instr','analizador_lexico_sintactico.py',413),
  ('index_list -> index_list CORCHETE_IZQ expression CORCHETE_DER','index_list',4,'p_index_list_instr','analizador_lexico_sintactico.py',421),
  ('index_list -> CORCHETE_IZQ expression CORCHETE_DER','index_list',3,'p_index_list_instr','analizador_lexico_sintactico.py',422),
  ('statement -> instrucciones','statement',1,'p_statement','analizador_lexico_sintactico.py',425),
  ('declare_function -> DEF ID PARENTESIS_IZQ dec_params PARENTESIS_DER DOSPUNTOS statement END','declare_function',8,'p_declare_function','analizador_lexico_sintactico.py',429),
  ('declare_function -> DEF ID PARENTESIS_IZQ PARENTESIS_DER DOSPUNTOS statement END','declare_function',7,'p_declare_function','analizador_lexico_sintactico.py',430),
  ('dec_params -> dec_params COMA ID DOSPUNTOS tipo','dec_params',5,'p_dec_params','analizador_lexico_sintactico.py',437),
  ('dec_params -> dec_params COMA ID','dec_params',3,'p_dec_params','analizador_lexico_sintactico.py',438),
  ('dec_params -> ID DOSPUNTOS tipo','dec_params',3,'p_dec_params','analizador_lexico_sintactico.py',439),
  ('dec_params -> ID','dec_params',1,'p_dec_params','analizador_lexico_sintactico.py',440),
  ('if_state -> IF expression DOSPUNTOS statement END','if_state',5,'p_if_state','analizador_lexico_sintactico.py',452),
  ('if_state -> IF expression DOSPUNTOS statement ELSE DOSPUNTOS statement END','if_state',8,'p_if_state','analizador_lexico_sintactico.py',453),
  ('if_state -> IF expression DOSPUNTOS statement else_if_list END','if_state',6,'p_if_state','analizador_lexico_sintactico.py',454),
  ('else_if_list -> ELSEIF expression DOSPUNTOS statement','else_if_list',4,'p_else_if_list','analizador_lexico_sintactico.py',458),
  ('else_if_list -> ELSEIF expression DOSPUNTOS statement ELSE statement','else_if_list',6,'p_else_if_list','analizador_lexico_sintactico.py',459),
  ('else_if_list -> ELSEIF expression DOSPUNTOS statement else_if_list','else_if_list',5,'p_else_if_list','analizador_lexico_sintactico.py',460),
  ('while_state -> WHILE expression DOSPUNTOS statement END','while_state',5,'p_while_state','analizador_lexico_sintactico.py',463),
  ('for_state -> FOR ID IN expression DOSPUNTOS expression DOSPUNTOS statement END','for_state',9,'p_for_state','analizador_lexico_sintactico.py',467),
  ('for_state -> FOR ID IN expression DOSPUNTOS statement END','for_state',7,'p_for_state','analizador_lexico_sintactico.py',468),
  ('break_state -> BREAK','break_state',1,'p_break','analizador_lexico_sintactico.py',471),
  ('continue_state -> CONTINUE','continue_state',1,'p_continue','analizador_lexico_sintactico.py',475),
  ('return_state -> RETURN','return_state',1,'p_return','analizador_lexico_sintactico.py',479),
  ('return_state -> RETURN expression','return_state',2,'p_return','analizador_lexico_sintactico.py',480),
]
